#include <bits/stdc++.h>
using namespace std;

void helper() 
{
    long long n, x;
    cin>>n>>x;
    vector<long long> arr(n),pre(n+1, 0),dp(n+3, 0);

    for (auto &i : arr) 
    {
        cin >> i;
    }

    for (int i = 0; i < n; i++) 
    {
        pre[i + 1] = pre[i] + arr[i];
    }

    for (int i = n - 1; i >= 0; i--) 
    {
        auto j = lower_bound(pre.begin(), pre.end(), pre[i] + x) - pre.begin();
        if (j == n+1) 
        {
            dp[i] += (n-i);
        } 
        else if (pre[j]==pre[i] + x) 
        {
            dp[i] += (j-i) + dp[j+1];
        } 
        else 
        {
            dp[i] += (j-i-1) + dp[j];
        }
    }

    long long ans = 0;
    for (int i=0; i<n; i++) 
    {
        ans += dp[i];
    }

    cout << ans << endl;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int t;
    cin >> t;
    while (t--) {
        helper();
    }
    return 0;
}
